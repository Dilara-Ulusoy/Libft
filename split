#include <stdlib.h>
#include <stddef.h>
#include <string.h>

static int	count_words(const char *s, char c)
{
	int	count;
	int	is_word;

	count = 0;
	is_word = 0;
	while (*s)
	{
		if (*s != c && !is_word)
		{
			is_word = 1;
			count++;
		}
		else if (*s == c)
			is_word = 0;
		s++;
	}
	return (count);
}

static char **malloc_list(int word_count)
{
	char	**list;

	list = (char **)malloc(sizeof(char *) * (word_count + 1));
	if (!list)
		return (NULL);
	return (list);
}

static char *word_finder(const char *s, char c)
{
	int len = 0;
	while (s[len] && s[len] != c)
		len++;
	char *word = (char *)malloc(sizeof(char) * (len + 1));
	if (!word)
		return NULL;
	strncpy(word, s, len);
	word[len] = '\0';
	return (word);
}

char **ft_split(const char *s, char c)
{
    int word_count;
    char **list;
    int i = 0;
    int k = 0;

    word_count = count_words(s, c);
    list = malloc_list(word_count);
    while (s[i])
    {
        if (s[i] != c)
        {
            char *word = word_finder(s + i, c);
            list[k++] = word;
            i += strlen(word); // Move past the word
        }
        else
            i++; // Skip the separator
    }
    list[k] = NULL;
    return list;
}

#include <stdio.h>

int main(void)
{
    char *str = "Hello,World,This,Is,Sparta";
    char **result = ft_split(str, ',');
    int i = 0;
    // Print the result
    while (result[i])
    {
        printf("%s\n", result[i]);
        free(result[i]); // Free memory
        i++;
    }
    free(result); // Free memory
    return 0;
}
